{"version":3,"file":"static/js/111.2534cf13.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/node/id.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/frameloop/on-next-frame.mjs","../node_modules/framer-motion/dist/es/frameloop/data.mjs","../node_modules/framer-motion/dist/es/frameloop/index.mjs","../node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/animation/utils/easing.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/keyframes.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/find-spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/index.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/decay.mjs","../node_modules/framer-motion/dist/es/animation/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/waapi/supports.mjs","../node_modules/framer-motion/dist/es/animation/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/create-instant-animation.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/index.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/inertia.mjs","../node_modules/framer-motion/dist/es/render/utils/animation.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/animation/animate.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","/*\n  Detect and load appropriate clock setting for the execution environment\n */\nconst defaultTimestep = (1 / 60) * 1000;\nconst getCurrentTime = typeof performance !== \"undefined\"\n    ? () => performance.now()\n    : () => Date.now();\nconst onNextFrame = typeof window !== \"undefined\"\n    ? (callback) => window.requestAnimationFrame(callback)\n    : (callback) => setTimeout(() => callback(getCurrentTime()), defaultTimestep);\n\nexport { defaultTimestep, onNextFrame };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n};\n\nexport { frameData };\n","import { onNextFrame, defaultTimestep } from './on-next-frame.mjs';\nimport { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nlet isProcessing = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frameData);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? defaultTimestep\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    isProcessing = true;\n    stepsOrder.forEach(processStep);\n    isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        onNextFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!isProcessing)\n        onNextFrame(processFrame);\n};\n\nexport { cancelSync, flushSync, sync };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { sync } from '../frameloop/index.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            sync.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const noop = (any) => any;\n\nexport { noop };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { sync } from '../frameloop/index.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                sync.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            sync.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            sync.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            sync.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { frameData } from '../frameloop/data.mjs';\nimport { sync } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.2.3\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                sync.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve) || null;\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        this.animation = null;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n\nexport { secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst easeIn = (p) => p * p;\nconst easeOut = reverseEasing(easeIn);\nconst easeInOut = mirrorEasing(easeIn);\n\nexport { easeIn, easeInOut, easeOut };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, \"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.\");\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../../easing/cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../../easing/ease.mjs';\nimport { circIn, circInOut, circOut } from '../../easing/circ.mjs';\nimport { backIn, backInOut, backOut } from '../../easing/back.mjs';\nimport { anticipate } from '../../easing/anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from '../utils/easing.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ keyframes: keyframeValues, ease = easeInOut, times, duration = 300, }) {\n    keyframeValues = [...keyframeValues];\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    function createInterpolator() {\n        return interpolate(absoluteTimes, keyframeValues, {\n            ease: Array.isArray(easingFunctions)\n                ? easingFunctions\n                : defaultEasing(keyframeValues, easingFunctions),\n        });\n    }\n    let interpolator = createInterpolator();\n    return {\n        next: (t) => {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: () => {\n            keyframeValues.reverse();\n            interpolator = createInterpolator();\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { warning } from '../../utils/errors.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = duration * 1000;\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { findSpring, calcAngularFreq } from './find-spring.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nconst velocitySampleDuration = 5;\n/**\n * This is based on the spring implementation of Wobble https://github.com/skevy/wobble\n */\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    let origin = keyframes[0];\n    let target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    let resolveSpring = zero;\n    let initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    function createSpring() {\n        const initialDelta = target - origin;\n        const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        /**\n         * If we're working on a granular scale, use smaller defaults for determining\n         * when the spring is finished.\n         *\n         * These defaults have been selected emprically based on what strikes a good\n         * ratio between feeling good and finishing as soon as changes are imperceptible.\n         */\n        const isGranularScale = Math.abs(initialDelta) < 5;\n        restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n        restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n        if (dampingRatio < 1) {\n            const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            // Underdamped spring\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (target -\n                    envelope *\n                        (((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) /\n                            angularFreq) *\n                            Math.sin(angularFreq * t) +\n                            initialDelta * Math.cos(angularFreq * t)));\n            };\n        }\n        else if (dampingRatio === 1) {\n            // Critically damped spring\n            resolveSpring = (t) => target -\n                Math.exp(-undampedAngularFreq * t) *\n                    (initialDelta +\n                        (initialVelocity + undampedAngularFreq * initialDelta) *\n                            t);\n        }\n        else {\n            // Overdamped spring\n            const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                // When performing sinh or cosh values can hit Infinity so we cap them here\n                const freqForT = Math.min(dampedAngularFreq * t, 300);\n                return (target -\n                    (envelope *\n                        ((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) *\n                            Math.sinh(freqForT) +\n                            dampedAngularFreq *\n                                initialDelta *\n                                Math.cosh(freqForT))) /\n                        dampedAngularFreq);\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        const prevT = Math.max(0, t - velocitySampleDuration);\n                        currentVelocity = velocityPerSecond(current - resolveSpring(prevT), t - prevT);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        flipTarget: () => {\n            initialVelocity = -initialVelocity;\n            [origin, target] = [target, origin];\n            createSpring();\n        },\n    };\n}\nspring.needsInterpolation = (a, b) => typeof a === \"string\" || typeof b === \"string\";\nconst zero = (_t) => 0;\n\nexport { spring };\n","import { keyframes } from './keyframes.mjs';\nimport { spring } from './spring.mjs';\nimport { decay } from './decay.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\n\nconst types = {\n    decay,\n    keyframes: keyframes,\n    tween: keyframes,\n    spring,\n};\nfunction loopElapsed(elapsed, duration, delay = 0) {\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration = 0, delay = 0, isForwardPlayback = true) {\n    return isForwardPlayback\n        ? loopElapsed(duration + -elapsed, duration, delay)\n        : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\nconst framesync = (update) => {\n    const passTimestamp = ({ delta }) => update(delta);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n    };\n};\nfunction animateValue({ duration, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = \"loop\", repeatDelay = 0, keyframes: keyframes$1, autoplay = true, onPlay, onStop, onComplete, onRepeat, onUpdate, type = \"keyframes\", ...options }) {\n    const initialElapsed = elapsed;\n    let driverControls;\n    let repeatCount = 0;\n    let computedDuration = duration;\n    let isComplete = false;\n    let isForwardPlayback = true;\n    let interpolateFromNumber;\n    const animator = types[keyframes$1.length > 2 ? \"keyframes\" : type] || keyframes;\n    const origin = keyframes$1[0];\n    const target = keyframes$1[keyframes$1.length - 1];\n    let state = { done: false, value: origin };\n    /**\n     * If this value needs interpolation (ie is non-numerical), set up an interpolator.\n     * TODO: Keyframes animation also performs this step. This could be removed so it only happens here.\n     */\n    const { needsInterpolation } = animator;\n    if (needsInterpolation && needsInterpolation(origin, target)) {\n        interpolateFromNumber = interpolate([0, 100], [origin, target], {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const animation = animator({\n        ...options,\n        duration,\n        keyframes: keyframes$1,\n    });\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        }\n        else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\")\n                animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls && driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback)\n            delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            state = animation.next(Math.max(0, elapsed));\n            if (interpolateFromNumber)\n                state.value = interpolateFromNumber(state.value);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate && onUpdate(state.value);\n        if (isComplete) {\n            if (repeatCount === 0) {\n                computedDuration =\n                    computedDuration !== undefined ? computedDuration : elapsed;\n            }\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            }\n            else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay && onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: () => {\n            onStop && onStop();\n            driverControls && driverControls.stop();\n        },\n        /**\n         * Set the current time of the animation. This is purposefully\n         * mirroring the WAAPI animation API to make them interchanagable.\n         * Going forward this file should be ported more towards\n         * https://github.com/motiondivision/motionone/blob/main/packages/animation/src/Animation.ts\n         * Which behaviourally adheres to WAAPI as far as possible.\n         *\n         * WARNING: This is not safe to use for most animations. We currently\n         * only use it for handoff from WAAPI within Framer.\n         *\n         * This animation function consumes time every frame rather than being sampled for time.\n         * So the sample() method performs some headless frames to ensure\n         * repeats are handled correctly. Ideally in the future we will replace\n         * that method with this, once repeat calculations are pure.\n         */\n        set currentTime(t) {\n            elapsed = initialElapsed;\n            update(t);\n        },\n        /**\n         * animate() can't yet be sampled for time, instead it\n         * consumes time. So to sample it we have to run a low\n         * temporal-resolution version.\n         *\n         * isControlled should be set to true if sample is being run within\n         * a loop. This indicates that we're not arbitrarily sampling\n         * the animation but running it one step after another. Therefore\n         * we don't need to run a low-res version here. This is a stop-gap\n         * until a rewrite can sample for time.\n         */\n        sample: (t, isControlled = false) => {\n            elapsed = initialElapsed;\n            if (isControlled) {\n                update(t);\n                return state;\n            }\n            const sampleResolution = duration && typeof duration === \"number\"\n                ? Math.max(duration * 0.5, 50)\n                : 50;\n            let sampleElapsed = 0;\n            update(0);\n            while (sampleElapsed <= t) {\n                const remaining = t - sampleElapsed;\n                update(Math.min(remaining, sampleResolution));\n                sampleElapsed += sampleResolution;\n            }\n            return state;\n        },\n    };\n}\n\nexport { animateValue, hasRepeatDelayElapsed, loopElapsed, reverseElapsed };\n","function decay({ \n/**\n * The decay animation dynamically calculates an end of the animation\n * based on the initial keyframe, so we only need to define a single keyframe\n * as default.\n */\nkeyframes = [0], velocity = 0, power = 0.8, timeConstant = 350, restDelta = 0.5, modifyTarget, }) {\n    const origin = keyframes[0];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    return {\n        next: (t) => {\n            const delta = -amplitude * Math.exp(-t / timeConstant);\n            state.done = !(delta > restDelta || delta < -restDelta);\n            state.value = state.done ? target : target + delta;\n            return state;\n        },\n        flipTarget: () => { },\n    };\n}\n\nexport { decay };\n","function isWaapiSupportedEasing(easing) {\n    return (!easing || // Default easing\n        Array.isArray(easing) || // Bezier curve\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return Array.isArray(easing)\n        ? cubicBezierAsString(easing)\n        : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { sync } from '../../frameloop/index.mjs';\nimport { animateValue } from '../legacy-popmotion/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0;\n    if (!canAccelerateAnimation)\n        return false;\n    let { keyframes, duration = 300, elapsed = 0, ease } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            elapsed: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < 20000) {\n            state = sampleAnimation.sample(t, true);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        delay: -elapsed,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n    });\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        sync.update(() => animation.cancel());\n        onComplete && onComplete();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        get currentTime() {\n            return animation.currentTime || 0;\n        },\n        set currentTime(t) {\n            animation.currentTime = t;\n        },\n        stop: () => {\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            sync.update(() => animation.cancel());\n        },\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: mapEasingToNativeEasing(ease),\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","import { delay } from '../utils/delay.mjs';\n\nfunction createInstantAnimation({ keyframes, elapsed, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n    };\n    return elapsed ? { stop: delay(setValue, -elapsed) } : setValue();\n}\n\nexport { createInstantAnimation };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","import { warning } from '../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from './waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from './create-instant-animation.mjs';\nimport { animateValue } from './legacy-popmotion/index.mjs';\nimport { inertia } from './legacy-popmotion/inertia.mjs';\nimport { getDefaultTransition } from './utils/default-transitions.mjs';\nimport { isAnimatable } from './utils/is-animatable.mjs';\nimport { getKeyframes } from './utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from './utils/transitions.mjs';\n\nconst createMotionValueAnimation = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ...valueTransition,\n            elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        else if (valueTransition.type === \"inertia\") {\n            /**\n             * If this is an inertia animation, we currently don't support pre-generating\n             * keyframes for this as such it must always run on the main thread.\n             */\n            return inertia(options);\n        }\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { createMotionValueAnimation };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        /**\n         * Ensure an initial wildcard keyframe is hydrated by the origin.\n         * TODO: Support extra wildcard keyframes i.e [1, null, 0]\n         */\n        if (target[0] === null) {\n            target[0] = origin;\n        }\n        return target;\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","import { animateValue } from './index.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nfunction inertia({ keyframes, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop, }) {\n    const origin = keyframes[0];\n    let currentAnimation;\n    function isOutOfBounds(v) {\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\n    }\n    function findNearestBoundary(v) {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation && currentAnimation.stop();\n        currentAnimation = animateValue({\n            keyframes: [0, 1],\n            velocity: 0,\n            ...options,\n            driver,\n            onUpdate: (v) => {\n                onUpdate && onUpdate(v);\n                options.onUpdate && options.onUpdate(v);\n            },\n            onComplete,\n            onStop,\n        });\n    }\n    function startSpring(options) {\n        startAnimation({\n            type: \"spring\",\n            stiffness: bounceStiffness,\n            damping: bounceDamping,\n            restDelta,\n            ...options,\n        });\n    }\n    if (isOutOfBounds(origin)) {\n        // Start the animation with spring if outside the defined boundaries\n        startSpring({\n            velocity,\n            keyframes: [origin, findNearestBoundary(origin)],\n        });\n    }\n    else {\n        /**\n         * Or if the value is out of bounds, simulate the inertia movement\n         * with the decay animation.\n         *\n         * Pre-calculate the target so we can detect if it's out-of-bounds.\n         * If it is, we want to check per frame when to switch to a spring\n         * animation\n         */\n        let target = power * velocity + origin;\n        if (typeof modifyTarget !== \"undefined\")\n            target = modifyTarget(target);\n        const boundary = findNearestBoundary(target);\n        const heading = boundary === min ? -1 : 1;\n        let prev;\n        let current;\n        const checkBoundary = (v) => {\n            prev = current;\n            current = v;\n            velocity = velocityPerSecond(v - prev, frameData.delta);\n            if ((heading === 1 && v > boundary) ||\n                (heading === -1 && v < boundary)) {\n                startSpring({ keyframes: [v, boundary], velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            keyframes: [origin, 0],\n            velocity,\n            timeConstant,\n            power,\n            restDelta,\n            modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\n        });\n    }\n    return {\n        stop: () => currentAnimation && currentAnimation.stop(),\n    };\n}\n\nexport { inertia };\n","import { setTarget } from './setters.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => animateTarget(visualElement, resolved, options)\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, sync);\n            }\n        }\n        let animation = value.start(createMotionValueAnimation(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation = animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { animateVisualElement } from './animation.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                sync.update(() => onDragStart(event, info));\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            sync.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(createMotionValueAnimation(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        sync.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    sync.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd && transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { sync } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelSync, flushSync, sync } from '../../frameloop/index.mjs';\nimport { animate } from '../../animation/animate.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        /**\n         * Frame calculations\n         */\n        resolveTargetDelta() {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !((isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animate(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","import { createMotionValueAnimation } from './index.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition = {}) {\n    const value = isMotionValue(from) ? from : motionValue(from);\n    value.start(createMotionValueAnimation(\"\", value, to, transition));\n    return {\n        stop: () => value.stop(),\n    };\n}\n\nexport { animate };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update(this.props, this.prevProps);\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.2.3\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.2.3 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","PresenceContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","isRefObject","ref","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","concat","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","_getCurrentTreeVarian","context","initial","undefined","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","_loop","isEnabled","useConstant","init","useRef","current","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","id","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","_ref","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","_objectSpread","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","projectionId","visualState","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","renderer","blockInitialAnimation","useInsertionEffect","update","render","updateFeatures","window","HandoffAppearAnimations","animationState","animateChanges","useVisualElement","initialLayoutGroupConfig","isStrict","React","Provider","useCallback","instance","mount","unmount","useMotionRef","_ref2","layoutGroupId","createMotionProxy","createConfig","custom","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","_ref$enableHardwareAc","enableHardwareAcceleration","_ref$allowTransformNo","allowTransformNone","transformString","transformName","trim","buildTransform","_transformOrigin$orig","_transformOrigin$orig2","_transformOrigin$orig3","createHtmlRenderState","copyRawValuesOnly","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","_objectWithoutProperties","excluded","sourceKeys","sourceSymbolKeys","propertyIsEnumerable","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","pathLength","_ref$pathSpacing","pathSpacing","_ref$pathOffset","pathOffset","_excluded","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","children","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","toUpperCase","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","_len","transformers","_key","reduce","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","_classCallCheck","this","isMounted","_createClass","defaultTimestep","getCurrentTime","performance","now","Date","onNextFrame","callback","requestAnimationFrame","setTimeout","frameData","delta","timestamp","useDefaultElapsed","runNextFrame","isProcessing","stepsOrder","steps","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","addToCurrentFrame","buffer","add","cancel","index","splice","delete","process","createRenderStep","sync","keepAlive","immediate","startLoop","cancelSync","flushSync","processStep","stepId","processFrame","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","HoverGesture","_Feature","_inherits","_super","_createSuper","FocusGesture","_this","isFocusVisible","matches","_this2","onFocus","onBlur","isNodeOrChild","child","parentElement","noop","any","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","_this$node$getProps","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","_this$node$getProps3","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","InViewFeature","hasEnteredView","isInView","_this$node$getProps$v","viewport","rootMargin","_viewport$amount","amount","once","threshold","isIntersecting","_this2$node$getProps","onViewportEnter","onViewportLeave","startObserver","_this$node","hasOptionsChanged","_ref$viewport","_ref2$viewport","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","next","prev","prevLength","isZeroValueString","addUniqueItem","arr","item","removeItem","SubscriptionManager","subscriptions","c","numSubscriptions","velocityPerSecond","velocity","frameDuration","MotionValue","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","postRender","scheduleVelocityCheck","change","notify","velocityChange","renderRequest","velocityCheck","hasAnimated","isNaN","owner","subscription","on","unsubscribe","read","getSize","stop","eventManagers","clear","passiveEffect","stopPassiveEffect","startAnimation","_this3","Promise","resolve","animationStart","then","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","isColorString","testProp","splitColor","aName","bName","cName","_v$match","match","_v$match2","_slicedToArray","rgbUnit","clampRgbUnit","rgba","red","green","blue","_ref$alpha","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","colorToken","numberToken","analyseComplexValue","numColors","numNumbers","colors","_toConsumableArray","map","numbers","tokenised","createTransformer","_analyseComplexValue","numValues","output","convertNumbersToZero","complex","_b","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","_v$slice$split","slice","_v$slice$split2","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","testValueType","dimensionValueTypes","findDimensionValueType","find","valueTypes","findValueType","resolveVariant","getCurrent","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","_ref$transitionEnd","getOriginFromTransition","from","isWillChangeMotionValue","optimizedAppearDataAttribute","warning","invariant","secondsToMilliseconds","seconds","instantAnimationState","mirrorEasing","easing","reverseEasing","easeIn","easeOut","easeInOut","to","progress","hueToRgb","q","t","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","ease","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","_ref$clamp","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","remaining","offsetProgress","fillOffset","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","circIn","sin","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","pow","easingDefinitionToFunction","_definition","isEasingArray","keyframes","keyframeValues","_ref$ease","times","_ref$duration","duration","easingFunctions","done","absoluteTimes","o","convertOffsetToTimes","createInterpolator","flipTarget","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","_ref$bounce","bounce","_ref$velocity","_ref$mass","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","f","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","restDelta","restSpeed","_getSpringOptions","springOptions","isResolvedFromDuration","derived","getSpringOptions","resolveSpring","zero","initialVelocity","createSpring","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","prevT","isBelowVelocityThreshold","isBelowDisplacementThreshold","needsInterpolation","_t","types","decay","_ref$keyframes","_ref$power","power","_ref$timeConstant","timeConstant","_ref$restDelta","modifyTarget","amplitude","ideal","tween","loopElapsed","elapsed","framesync","passTimestamp","animateValue","driverControls","interpolateFromNumber","_ref2$driver","driver","_ref2$elapsed","_ref2$repeat","repeat","repeatMax","_ref2$repeatType","repeatType","_ref2$repeatDelay","repeatDelay","keyframes$1","_ref2$autoplay","autoplay","onPlay","onStop","onComplete","onRepeat","onUpdate","_ref2$type","initialElapsed","repeatCount","computedDuration","isComplete","isForwardPlayback","animator","delay","reverseElapsed","hasRepeatDelayElapsed","currentTime","sample","sampleResolution","sampleElapsed","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","featureTests","waapi","Element","results","supports","acceleratedValues","requiresPregeneratedKeyframes","valueName","createAcceleratedAnimation","_options$duration","_options$elapsed","sampleAnimation","pregeneratedKeyframes","_ref$delay","_ref$repeat","_ref$repeatType","keyframeOptions","iterations","direction","animateStyle","onfinish","getFinalKeyframe","setWithVelocity","timeout","checkElapsed","createInstantAnimation","setValue","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","isZero","getZeroUnit","potentialUnitType","getValueTransition","createMotionValueAnimation","valueTransition","_transition$elapsed","isTargetAnimatable","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","currentAnimation","_ref$bounceStiffness","bounceStiffness","_ref$bounceDamping","bounceDamping","isOutOfBounds","findNearestBoundary","startSpring","boundary","heading","inertia","when","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","HTMLElement","acceleratedAnimation","animateVariant","variant","_ref$transition","transitionOverride","getAnimation","animateTarget","getChildAnimations","variantChildren","forwardDelay","_transition","_transition$delayChil","animations","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","_ref3","first","last","_ref4","_ref4$delay","_visualElement$makeTa","_visualElement$makeTa2","willChange","animationTypeState","getState","_ref5","protectedKeys","needsAnimating","shouldBlock","shouldBlockAnimation","appearId","shouldReduceMotion","remove","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","Infinity","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","_typeState$prevResolv","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","_this$node$presenceCo","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","_this$handlers","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","_this$handlers2","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","time","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","_ref$snapToCursor","snapToCursor","panSession","stopAnimation","_this$getProps","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","_this$getProps2","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","onDragEnd","_this$visualElement","_point","shouldDrag","axisValue","applyConstraints","_this$getProps6","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","_this$getProps7","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","_this$getProps8","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","_this4","dragKey","externalMotionValue","_this5","_projection$layout$la","_this6","_this$getProps9","boxProgress","latest","sourceLength","targetLength","updateScroll","updateLayout","_this6$constraints$ax","_this7","stopPointerListener","_this7$getProps","_this7$getProps$dragL","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","_props$drag","_props$dragDirectionL","_props$dragPropagatio","_props$dragConstraint","_props$dragElastic","_props$dragMomentum","DragGesture","removeGroupControls","controls","dragControls","addListeners","asyncHandler","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","pixelsToPercent","pixels","correctBorderRadius","correct","cssVariableRegex","maxDepth","getVariableValue","depth","_parseCSSVariable","exec","_match","parseCSSVariable","_parseCSSVariable2","fallback","getComputedStyle","getPropertyValue","resolveCSSVariables","TypeError","_objectDestructuringEmpty","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","_React__default$Compo","correctors","_this$props","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","_this$props2","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","isLead","_this$props3","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","_usePresence","useId","usePresence","_usePresence2","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","ProjectionNode","elementId","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","subscriptionManager","args","SVGElement","_this$options","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","_visualElement$getPro","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","preRender","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","_this$options2","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","getLead","attemptToResolveRelativeTarget","_this$options3","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","isShared","canSkip","_this$options4","pendingAnimation","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","_this$projectionDelta","_scaleCorrectors$key","corrected","num","hasListeners","_node$layout","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","searchNode","querySelector","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref3$paddingLeft","_ref3$paddingRight","_ref5$paddingTop","_ref5$paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","jump","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","targetBbox","convertChangedValueTypes","_ref12","_ref13","scrollTo","unitConversion","hasPositionalKey","prefersReducedMotion","hasReducedMotionListener","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","_this$scrapeMotionVal","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","_excluded2","_featureDefinitions$n","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","_this$events$eventNam","_key2","DOMVisualElement","_VisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","parseDomVariant","HTMLVisualElement","_DOMVisualElement","defaultType","computedStyle","childSubscription","textContent","_get","Reflect","bind","property","receiver","base","getPrototypeOf","desc","SVGVisualElement","getAttribute","_getPrototypeOf","createDomVisualElement","motion","_ref$forwardMotionPro","baseConfig","createDomMotionConfig"],"sourceRoot":""}